name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  path: build/libs/GradleBasePlugin.jar
  name: GradleBasePlugin.jar
  nmsVersion: "1.21.4"
  build: build-${{ github.run_number }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # if you have a protection rule on your repository, you'll need to give write permission to the workflow.

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: 11
            
    # - name: Cache NMS
    #   id: cache-nms
    #   uses: actions/cache@v1
    #   with:
    #     path: nms-build/.m2/repository/
    #     key: ${{ runner.os }}-${{ env.nmsVersion }}-nms
    
    # - name: Build NMS
    #   if: steps.cache-nms.outputs.cache-hit != 'true'
    #   uses: derongan/nmsaction@v1
    #   with:
    #     rev: ${{ env.nmsVersion }}
    
    # - name: Install NMS
    #   run: mkdir -p $HOME/.m2/repository && cp -a nms-build/.m2/repository/* $HOME/.m2/repository    
    
    - name: Grant Gradlew Permissions
      run: chmod +x gradlew
    
    - name: Build with Gradle
      run: ./gradlew build
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.build }}
        release_name: Release ${{ env.build }}
    
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.path }}
        asset_name: ${{ env.name }}
        asset_content_type: application/java-archive
